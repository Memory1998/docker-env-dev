# 启动命令
version: '3'
services:
  # redis
  breeze-redis:
    image: redis
    container_name: breeze-redis
    hostname: breeze-redis
    restart: always
    ports:
      - "6379:6379"
    expose:
      - "6378"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./redis/conf/redis.conf:/etc/redis/redis.conf
      - ./redis/data/:/data
      - ./redis/logs/:/logs
      - /etc/localtime:/etc/localtime:ro
    command:
      redis-server /etc/redis/redis.conf
    privileged: true
    networks:
      - breeze-net

  # 数据库
  breeze-mysql:
    image: mysql:8.0.16
    container_name: breeze-mysql
    hostname: breeze-mysql
    restart: always
    environment:
      MYSQL_DATABASE: breeze_config
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      # - /usr/local/soft/docker-env-dev/mysql/db/breeze_config.sql /docker-entrypoint-initdb.d/
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/data/:/var/lib/mysql
      - ./mysql/logs:/var/log/mysql
      - /etc/localtime:/etc/localtime:ro
    command: [
      # 可以配置在mysql的 my.ini 中
      "--max_connections=1024",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_general_ci",
      "--default-authentication-plugin=mysql_native_password",
      "--default-time_zone='+8:00'"
    ]
    privileged: true
    networks:
      - breeze-net

  breeze-nacos:
    image: nacos/nacos-server:v2.2.0
    container_name: breeze-nacos
    hostname: breeze-nacos
    restart: always
    depends_on:
      - breeze-mysql
    environment:
      PREFER_HOST_MODE: hostname #如果支持主机名可以使用hostname,否则使用ip，默认也是ip
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: breeze-mysql
      MYSQL_SERVICE_DB_NAME: breeze_config
      MYSQL_SERVICE_DB_PARAM: "characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&serverTimezone=UTC"
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: root
      JVM_XMS: 512m
      JVM_MMS: 320m
      TZ: Asia/Shanghai
    volumes:
      - ./nacos/standalone-logs/:/home/nacos/logs
      - ./nacos/plugins/:/home/nacos/plugins
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    expose:
      - "8848"
      - "9848"
      - "9849"
    privileged: true
    networks:
      - breeze-net

  breeze-prometheus:
    container_name: breeze-prometheus
    hostname: breeze-prometheus
    image: prom/prometheus:latest
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./prometheus/conf/prometheus-standalone.yaml:/etc/prometheus/prometheus.yml
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "9090:9090"
    depends_on:
      - breeze-nacos
    restart: on-failure
    privileged: true
    networks:
      - breeze-net

  xxl-job-admin:
    container_name: xxl-job-admin
    hostname: xxl-job-admin
    image: xuxueli/xxl-job-admin:2.4.0
    environment:
      TZ: Asia/Shanghai
      PARAMS: "--spring.datasource.url=jdbc:mysql://breeze-mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai --spring.datasource.username=root --spring.datasource.password=root"
    volumes:
      - /xxljob/data/applogs:/data/applogs
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8080:8080"
    depends_on:
      - breeze-mysql
    restart: on-failure
    privileged: true
    networks:
      - breeze-net

  breeze-grafana:
    container_name: breeze-grafana
    image: grafana/grafana:latest
    hostname: breeze-grafana
    environment:
      TZ: Asia/Shanghai
    ports:
      - "3000:3000"
    restart: on-failure
    privileged: true
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - breeze-net

  breeze-sentinel-dashboard:
    container_name: breeze-sentinel-dashboard
    image: breezeworker/breeze-sentinel-dashboard:1.8.6
    hostname: breeze-sentinel-dashboard
    ports:
      - "8080:8080"
    environment:
      NACOS_HOST: breeze-nacos
      NACOS_PORT: 8848
      USERNAME: admin
      PASSWORD: admin
      TZ: Asia/Shanghai
    volumes:
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - breeze-nacos
    restart: on-failure
    privileged: true
    networks:
      - breeze-net

  breeze-mongodb:
    image: mongo:4.2.3
    container_name: breeze-mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb/data/db:/data/db
      - /etc/localtime:/etc/localtime
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    privileged: true
    restart: always
    networks:
      - breeze-net

  # rabbitMq服务
  breeze-rabbitmq:
    image: rabbitmq:3.9.13-management
    container_name: breeze-rabbitmq
    hostname: breeze-rabbitmq
    ports:
      - "4369:4369"
      - "15672:15672" # client端通信口
      - "5672:5672" # 管理界面ui端口
      - "25672:25672" # server间内部通信口
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
      - ./rabbitmq/log:/var/log/rabbitmq/log
    #环境变量
    environment:
      - RABBITMQ_DEFAULT_VHOST=breeze
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=123456
    privileged: true
    restart: always
    networks:
      - breeze-net

  breeze-minio:
    container_name: breeze-minio
    image: minio/minio
    hostname: breeze-minio
    ports:
      - "9092:9092" # api端口
      - "9091:9091" # 控制台端口
    environment:
      MINIO_ACCESS_KEY: admin     #管理平台用户名
      MINIO_SECRET_KEY: 12345678    #管理平台密码
      TZ: Asia/Shanghai
    volumes:
      - ./minio/data:/data
      - ./minio/config:/root/.minio/
      - /etc/localtime:/etc/localtime:ro
    command: server --console-address ':9091' --address ':9092' /data  #指定容器中的目录 /data
    privileged: true
    restart: always
    networks:
      - breeze-net

  # seata服务1
  breeze-seata-server-1:
    image: seataio/seata-server:1.6.1
    container_name: breeze-seata-server-1
    hostname: breeze-seata-server
    ports:
      - "8091:8091"
    environment:
      # 指定 seata 服务启动端口
      SEATA_PORT: 8091
      # 注册到 nacos 上的ip。客户端将通过该ip访问seata服务。
      # 注意公网ip和内网ip的差异。
      SEATA_IP: 127.0.0.1
      SEATA_CONFIG_NAME: file:/root/seata-config/registry
      TZ: Asia/Shanghai
    volumes:
      # 因为registry.conf中是nacos配置中心，只需要把registry.conf放到./seata-server/config文件夹中
      - ./seata-server/config:/root/seata-config
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    restart: always
    networks:
      - breeze-net

  # seata服务2
  breeze-seata-server-2:
    image: seataio/seata-server:1.6.1
    container_name: breeze-seata-server-2
    hostname: breeze-seata-server
    ports:
      - "8092:8092"
    environment:
      # 指定seata服务启动端口
      SEATA_PORT: 8092
      # 注册到nacos上的ip。客户端将通过该ip访问seata服务。
      # 注意公网ip和内网ip的差异。
      SEATA_IP: 127.0.0.1
      SEATA_CONFIG_NAME: file:/root/seata-config/registry
      TZ: Asia/Shanghai
    volumes:
      # 因为registry.conf中是nacos配置中心，只需要把registry.conf放到./seata-server/config文件夹中
      - ./seata-server/config:/root/seata-config
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    restart: always
    networks:
      - breeze-net

  breeze-postgresql:
    image: postgres:9.6.2
    container_name: breeze-postgresql
    hostname: breeze-postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: root
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data/pgdata
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    restart: always
    networks:
      - breeze-net

  # java程序
  breeze-boot:
    container_name: breeze-boot
    image: breeze-app
    build:
      context: .
      dockerfile: ./java/breeze-boot.dockerfile
    ports:
      - "9000:9000"
    expose:
      - "9000"
    environment:
      BREEZE_REDIS_HOST: breeze-redis
      BREEZE_REDIS_PORT: 6379
      BREEZE_REDIS_PASSWORD: breeze
      BREEZE_MYSQL_HOST: breeze-mysql
      BREEZE_MYSQL_PORT: 3306
      BREEZE_MYSQL_DB_NAME: breeze_admin
      BREEZE_MYSQL_USERNAME: root
      BREEZE_MYSQL_PASSWORD: root
      TZ: Asia/Shanghai
    volumes:
      - ./java/breeze-boot/logs:/usr/local/breeze/logs
      - ./java/breeze-boot/upload:/usr/local/breeze/upload
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - breeze-redis
      - breeze-mysql
    links:
      - breeze-redis
      - breeze-mysql
    networks:
      - breeze-net

  # nginx
  breeze-nginx:
    container_name: breeze-nginx
    image: nginx:1.16
    environment:
      TZ: Asia/Shanghai
    ports:
      - "80:80"
    expose:
      - "80"
    volumes:
      - ./nginx/html/breeze-web:/usr/local/nginx/html/breeze-web
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - breeze-boot
    links:
      - breeze-boot
    networks:
      - breeze-net

networks:
  breeze-net:
    # 如果要创建外部隔离的覆盖网络，您可以将此internal选项设置为true
    external: false
